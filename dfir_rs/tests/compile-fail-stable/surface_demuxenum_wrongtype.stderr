error[E0277]: the trait bound `{integer}: DemuxEnumSink<(Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>, Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>, Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>)>` is not satisfied
  --> tests/compile-fail-stable/surface_demuxenum_wrongtype.rs:13:41
   |
13 |         my_demux = source_iter(0..5) -> demux_enum::<Shape>();
   |                                         ^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `DemuxEnumSink<(Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>, Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>, Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>)>` is not implemented for `{integer}`
   = note: ensure there is exactly one output for each enum variant.
   = note: ensure that the type for each output is a tuple of the field for the variant: `()`, `(a,)`, or `(a, b, ...)`.
   = help: the trait `DemuxEnumSink<(Pin<&mut __SinkCircle>, Pin<&mut __SinkRectangle>, Pin<&mut __SinkSquare>)>` is implemented for `Shape`
note: required by a bound in `main::{closure#1}::{closure#0}::op_2v1__demux_enum__loc_nopath_13_40_13_50`
  --> tests/compile-fail-stable/surface_demuxenum_wrongtype.rs:13:41
   |
13 |         my_demux = source_iter(0..5) -> demux_enum::<Shape>();
   |                                         ^^^^^^^^^^ required by this bound in `op_2v1__demux_enum__loc_nopath_13_40_13_50`
