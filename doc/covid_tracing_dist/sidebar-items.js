initSidebarItems({"constant":[["CONTACTS_ADDR",""],["DIAGNOSES_ADDR",""]],"derive":[["ArgEnum","Generates the `ArgEnum` impl."],["Deserialize",""],["Parser","Generates the `Parser` implementation."],["Serialize",""]],"enum":[["Message",""],["Role",""]],"fn":[["add_tcp_stream",""],["main",""]],"mod":[["database",""],["people",""],["tracker",""]],"struct":[["FramedRead","A `Stream` of messages decoded from an `AsyncRead`."],["FramedWrite","A `Sink` of frames encoded to an `AsyncWrite`."],["Hydroflow","A Hydroflow graph. Owns, schedules, and runs the compiled subgraphs."],["InputPort","Handle corresponding to a [RecvCtx]. Consumed by [crate::scheduled::Hydroflow::add_edge] to construct the Hydroflow graph."],["LengthDelimitedCodec","A codec for frames delimited by a frame head specifying their lengths."],["Opts",""],["OutputPort","Handle corresponding to a [SendCtx]. Consumed by [crate::scheduled::Hydroflow::add_edge] to construct the Hydroflow graph."],["RecvCtx","Context provided to a compiled component for reading from an [InputPort]."],["Runtime","The Tokio runtime."],["TcpStream","A TCP stream between a local and a remote socket."],["VecHandoff","A [VecDeque]-based FIFO handoff."]],"trait":[["ArgEnum","Parse arguments into enums."],["Deserialize","A data structure that can be deserialized from any data format supported by Serde."],["Encodable",""],["Parser","Parse command-line arguments into `Self`."],["Serialize","A data structure that can be serialized into any data format supported by Serde."],["SinkExt","An extension trait for `Sink`s that provides a variety of convenient combinator functions."],["StreamExt","An extension trait for `Stream`s that provides a variety of convenient combinator functions."]]});